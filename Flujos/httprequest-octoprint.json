[
    {
        "id": "a250f203621a2e27",
        "type": "tab",
        "label": "Flujo 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73d967a989085926",
        "type": "inject",
        "z": "a250f203621a2e27",
        "name": "GET",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "5f8b38f6af1eab81",
                "2bac1b8a1d926501"
            ]
        ]
    },
    {
        "id": "5f8b38f6af1eab81",
        "type": "http request",
        "z": "a250f203621a2e27",
        "name": "Estado OctoPrint",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://octoprint:5000/api/printer",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-Api-Key",
                "valueType": "other",
                "valueValue": "sHyUL2EZ8Q_Cq8Lpi_B6gkaobZbOqtEb6PRbxxgedpo"
            }
        ],
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "d7e1f4e14c8dee85"
            ]
        ]
    },
    {
        "id": "2bac1b8a1d926501",
        "type": "http request",
        "z": "a250f203621a2e27",
        "name": "Job Info",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://octoprint:5000/api/job",
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-Api-Key",
                "valueType": "other",
                "valueValue": "sHyUL2EZ8Q_Cq8Lpi_B6gkaobZbOqtEb6PRbxxgedpo"
            }
        ],
        "x": 430,
        "y": 1240,
        "wires": [
            [
                "e83880611d767e3c"
            ]
        ]
    },
    {
        "id": "d7e1f4e14c8dee85",
        "type": "change",
        "z": "a250f203621a2e27",
        "name": "Set topic=printer",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "printer",
                "tot": "str"
            }
        ],
        "x": 660,
        "y": 1160,
        "wires": [
            [
                "1374d2e7ac16216b"
            ]
        ]
    },
    {
        "id": "e83880611d767e3c",
        "type": "change",
        "z": "a250f203621a2e27",
        "name": "Set topic=job",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "job",
                "tot": "str"
            }
        ],
        "x": 650,
        "y": 1240,
        "wires": [
            [
                "1374d2e7ac16216b"
            ]
        ]
    },
    {
        "id": "1374d2e7ac16216b",
        "type": "join",
        "z": "a250f203621a2e27",
        "name": "Unir printer + job",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 890,
        "y": 1200,
        "wires": [
            [
                "744c62d6eb999982"
            ]
        ]
    },
    {
        "id": "744c62d6eb999982",
        "type": "function",
        "z": "a250f203621a2e27",
        "name": "Formato JSON Schema",
        "func": "const data = msg.payload || {};\nconst printer = data.printer || {};\nconst job = data.job || {};\n\nmsg.payload = {\n    id: \"printer-01\",\n    type: \"3DPrinter\",\n    timestamp: new Date().toISOString(),\n\n    temperatures: {\n        nozzle: {\n            value: printer.temperature?.tool0?.actual ?? null,\n            metadata: { unit: \"°C\" }\n        },\n        bed: {\n            value: printer.temperature?.bed?.actual ?? null,\n            metadata: { unit: \"°C\" }\n        }\n    },\n\n    environment: {\n        room_temperature: {\n            value: null,\n            metadata: { unit: \"°C\" }\n        }\n    },\n\n    fan_speed: {\n        value: null,\n        metadata: { unit: \"%\" }\n    },\n\n    movement_speed: {\n        value: null,\n        metadata: { unit: \"mm/s\" }\n    },\n\n    energy_consumption: {\n        value: null,\n        metadata: { unit: \"Wh\" }\n    },\n\n    print_time: {\n        elapsed: {\n            value: job.progress?.printTime ?? null,\n            metadata: { unit: \"s\" }\n        },\n        estimated: {\n            value: (job.progress?.printTime ?? 0) + (job.progress?.printTimeLeft ?? 0),\n            metadata: { unit: \"s\" }\n        }\n    },\n\n    printer: {\n        brand: printer.brand ?? \"Desconocido\",\n        model: printer.model ?? \"Desconocido\"\n    },\n\n    filament: {\n        color: null,\n        type: null,\n        brand: null\n    },\n\n    slicer: null,\n    print_cost: null,\n    print_successful: job.state === \"Printing\",\n    image: null,\n    file: job.job?.file?.path ?? null,\n    current_layer_height: job.job?.layer_height ?? null\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1200,
        "wires": [
            [
                "5a5fd90bcc7d7f95"
            ]
        ]
    },
    {
        "id": "5a5fd90bcc7d7f95",
        "type": "debug",
        "z": "a250f203621a2e27",
        "name": "Resultado Final",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1380,
        "y": 1200,
        "wires": []
    }
]